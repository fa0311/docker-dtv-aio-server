services:
  isdb-scanner:
    image: isdb-scanner
    container_name: ISDBScanner
    build:
      context: ./ISDBScanner
    volumes:
      - ./Scanned:/app/Scanned
      - ./ISDBScanner/entrypoint.sh:/app/entrypoint.sh:ro
    command: [/bin/bash, /app/entrypoint.sh]
    entrypoint: ""
    restart: no

    # ==================== ↓↓↓↓↓ ここからユーザー設定 ↓↓↓↓↓ ====================
    environment:
      - EXCLUDE_PAY_TV=1 # 1 にすると有料放送を除外します
    # 接続されている全てのデバイスにアクセスする必要があるため、特権モードを有効にする設定。
    privileged: true
    # セキュリティ上の都合で特権モードを利用したくない場合は
    # ホストマシンに接続されている TV チューナーとカードリーダーのデバイスファイルを個別に指定してください。
    # devices:
    #   - /dev/bus:/dev/bus
    #   - /dev/px4video0:/dev/px4video0
    #   - /dev/px4video1:/dev/px4video1
    #   - /dev/px4video2:/dev/px4video2
    #   - /dev/px4video3:/dev/px4video3
    #   - /dev/px4video4:/dev/px4video4
    #   - /dev/px4video5:/dev/px4video5
    #   - /dev/px4video6:/dev/px4video6
    #   - /dev/px4video7:/dev/px4video7
    # ==================== ↑↑↑↑↑ ここまでユーザー設定 ↑↑↑↑↑ ====================

  mirakurun:
    image: mirakurun
    container_name: Mirakurun
    build:
      context: ./Mirakurun
    ports:
      - 40772:40772
      - 9229:9229
    volumes:
      - ./Scanned/Mirakurun/channels.yml:/app-config/channels.yml:ro
      - ./Scanned/Mirakurun/tuners.yml:/app-config/tuners.yml:ro
      - ./Mirakurun/server.yml:/app-config/server.yml
      - ./Mirakurun/healthcheck.sh:/app/healthcheck.sh:ro
      - mirakurun-data:/app-data
    environment:
      TZ: Asia/Tokyo
    depends_on:
      isdb-scanner:
        condition: service_completed_successfully
    restart: unless-stopped
    healthcheck:
      test: [CMD, /bin/bash, healthcheck.sh]
      interval: 5m
      timeout: 2s
      retries: 3
      start_period: 1m
      start_interval: 2s

    # ==================== ↓↓↓↓↓ ここからユーザー設定 ↓↓↓↓↓ ====================
    # 接続されている全てのデバイスにアクセスする必要があるため、特権モードを有効にする設定。
    privileged: true
    # セキュリティ上の都合で特権モードを利用したくない場合は
    # ホストマシンに接続されている TV チューナーとカードリーダーのデバイスファイルを個別に指定してください。
    # devices:
    #   - /dev/bus:/dev/bus
    #   - /dev/px4video0:/dev/px4video0
    #   - /dev/px4video1:/dev/px4video1
    #   - /dev/px4video2:/dev/px4video2
    #   - /dev/px4video3:/dev/px4video3
    #   - /dev/px4video4:/dev/px4video4
    #   - /dev/px4video5:/dev/px4video5
    #   - /dev/px4video6:/dev/px4video6
    #   - /dev/px4video7:/dev/px4video7
    # ==================== ↑↑↑↑↑ ここまでユーザー設定 ↑↑↑↑↑ ====================

  edcb:
    image: edcb
    container_name: EDCB
    build:
      context: ./EDCB
    volumes:
      - edcb-epg-data:/var/local/edcb/Setting
      - tv-record-data:/Record/TV-Record
      - ./Scanned/EDCB-Wine/BonDriver_mirakc_S(BonDriver_mirakc).ChSet4.txt:/var/local/edcb/Setting/BonDriver_LinuxMirakc_S(LinuxMirakc).ChSet4.txt:ro
      - ./Scanned/EDCB-Wine/BonDriver_mirakc_T(BonDriver_mirakc).ChSet4.txt:/var/local/edcb/Setting/BonDriver_LinuxMirakc_T(LinuxMirakc).ChSet4.txt:ro
      - ./Scanned/EDCB-Wine/BonDriver_mirakc(BonDriver_mirakc).ChSet4.txt:/var/local/edcb/Setting/BonDriver_LinuxMirakc(LinuxMirakc).ChSet4.txt:ro
      - ./Scanned/EDCB-Wine/ChSet5.txt:/var/local/edcb/Setting/ChSet5.txt:ro
      - ./EDCB/EDCB_Config/Common.ini:/var/local/edcb/Common.ini
      - ./EDCB/EDCB_Config/EpgDataCap_Bon.ini:/var/local/edcb/EpgDataCap_Bon.ini
      - ./EDCB/EDCB_Config/EpgTimerSrv.ini:/var/local/edcb/EpgTimerSrv.ini
      - ./EDCB/EDCB_Config/bat:/var/local/edcb/bat
      - ./EDCB/EDCB_Config/RecEnd.sh:/var/local/edcb/RecEnd.sh:ro
      - ./EDCB/healthcheck.sh:/var/local/edcb/healthcheck.sh:ro
    depends_on:
      mirakurun:
        condition: service_healthy
    restart: unless-stopped
    network_mode: host
    healthcheck:
      test: [CMD, /bin/bash, healthcheck.sh]
      interval: 5m
      timeout: 2s
      retries: 3
      start_period: 1m
      start_interval: 2s

  konomitv:
    image: konomitv
    container_name: KonomiTV
    build:
      context: ./KonomiTV/KonomiTV
    depends_on:
      mirakurun:
        condition: service_healthy
      edcb:
        condition: service_healthy
    restart: unless-stopped
    network_mode: host
    volumes:
      - konomitv-data:/code/server/data/
      - tv-encoded-data:/host-rootfs/Record/TV-Encoded
      - tv-capture-data:/host-rootfs/Record/TV-Capture
      - ./KonomiTV/config.yaml:/code/config.yaml
      - ./KonomiTV/healthcheck.sh:/code/server/healthcheck.sh:so
    healthcheck:
      test: [CMD, /bin/bash, healthcheck.sh]
      interval: 5m
      timeout: 2s
      retries: 3
      start_period: 1m
      start_interval: 2s

    # ==================== ↓↓↓↓↓ ここからユーザー設定 ↓↓↓↓↓ ====================
    # QSVEncC / VCEEncC を利用する (Intel Graphics / AMD GPU にアクセスする) ために必要な設定
    # VCEEncC (AMD GPU) を利用するには、別途 AMDGPU-PRO Driver のインストールが必要です。
    # GPU が1個も搭載されていない (/dev/dri/ 以下のデバイスファイルが存在しない) 特殊な環境では、
    # コメントアウトしてこの設定を無効にしないと、KonomiTV サーバーを起動できなくなります。
    devices:
      - /dev/dri/:/dev/dri/
  # NVEncC を利用する (NVIDIA GPU にアクセスする) ために必要な設定
  # NVEncC (NVIDIA GPU) を利用するには、別途 NVIDIA Graphics Driver と
  # NVIDIA Container Toolkit のインストールが必要です。
  # コメントアウトを解除してこの設定を有効にすると、NVIDIA GPU が搭載されていない環境では KonomiTV サーバーを起動できなくなります。
  # deploy:
  #   resources:
  #     reservations:
  #       devices:
  #         - driver: nvidia
  #           count: all
  #           capabilities: [compute, utility, video]
  # ==================== ↑↑↑↑↑ ここまでユーザー設定 ↑↑↑↑↑ ====================

  amatsukaze-setup:
    image: amatsukaze-setup
    container_name: AmatsukazeSetup
    build:
      context: Amatsukaze
    volumes:
      - ./Amatsukaze/data:/data
    restart: no

  amatsukaze:
    image: amatsukaze
    container_name: Amatsukaze
    build:
      context: Amatsukaze/Amatsukaze/docker
    restart: unless-stopped
    ports:
      - "32768:32768"
    environment:
      - RUN_UID=1000
      - RUN_GID=1000
    volumes:
      - ./Amatsukaze/data/avs:/app/avs
      - ./Amatsukaze/data/bat:/app/bat
      - ./Amatsukaze/data/drcs:/app/drcs
      - ./Amatsukaze/data/JL:/app/JL
      - ./Amatsukaze/data/logo:/app/logo
      - ./Amatsukaze/data/profile:/app/profile
      - ./Amatsukaze/healthcheck.sh:/healthcheck.sh
      - amatsukaze-data:/app/data
      - amatsukaze-config:/app/config
      - tv-record-data:/Record/TV-Record
      - tv-encoded-data:/Record/TV-Encoded
    depends_on:
      amatsukaze-setup:
        condition: service_completed_successfully
    healthcheck:
      test: [CMD, /bin/bash, /healthcheck.sh]
      interval: 5m
      timeout: 2s
      retries: 3
      start_period: 1m
      start_interval: 2s

    # ==================== ↓↓↓↓↓ ここからユーザー設定 ↓↓↓↓↓ ====================
    # QSVEncC / VCEEncC を利用する (Intel Graphics / AMD GPU にアクセスする) ために必要な設定
    # VCEEncC (AMD GPU) を利用するには、別途 AMDGPU-PRO Driver のインストールが必要です。
    # GPU が1個も搭載されていない (/dev/dri/ 以下のデバイスファイルが存在しない) 特殊な環境では、
    # コメントアウトしてこの設定を無効にしないと、KonomiTV サーバーを起動できなくなります。
    devices:
      - /dev/dri/:/dev/dri/
  # NVEncC を利用する (NVIDIA GPU にアクセスする) ために必要な設定
  # NVEncC (NVIDIA GPU) を利用するには、別途 NVIDIA Graphics Driver と
  # NVIDIA Container Toolkit のインストールが必要です。
  # コメントアウトを解除してこの設定を有効にすると、NVIDIA GPU が搭載されていない環境では KonomiTV サーバーを起動できなくなります。
  # deploy:
  #   resources:
  #     reservations:
  #       devices:
  #         - driver: nvidia
  #           count: all
  #           capabilities: [compute, utility, video]
  # ==================== ↑↑↑↑↑ ここまでユーザー設定 ↑↑↑↑↑ ====================

  # ==================== ↓↓↓↓↓ ここからユーザー設定 ↓↓↓↓↓ ====================
  # NFS サーバーコンテナを追加する設定
  # Linux クライアントから NFS マウントで録画フォルダにアクセスしたい場合に利用します。
  # 不要なら削除してください。
  nfs:
    image: itsthenetwork/nfs-server-alpine:latest
    container_name: nfs-server
    environment:
      - TZ=Asia/Tokyo
      - SHARED_DIRECTORY=/shares
    volumes:
      - tv-record-data:/shares/TV-Record
      - tv-encoded-data:/shares/TV-Encoded
      - tv-capture-data:/shares/TV-Capture
    privileged: true
    restart: unless-stopped
  # ==================== ↑↑↑↑↑ ここまでユーザー設定 ↑↑↑↑↑ ====================

  # ==================== ↓↓↓↓↓ ここからユーザー設定 ↓↓↓↓↓ ====================
  # Samba サーバーコンテナを追加する設定
  # Windows クライアントから SMB マウントで録画フォルダにアクセスしたい場合に利用します。
  # 不要なら削除してください。
  samba:
    image: dperson/samba:latest
    container_name: samba
    ports:
      - "445:445"
    environment:
      TZ: Asia/Tokyo
      PERMISSIONS: "true"
      USER: "admin;password"
      SHARE: "shares;/shares;yes;no;no;admin"
      WORKGROUP: "WORKGROUP"
    volumes:
      - tv-record-data:/shares/TV-Record
      - tv-encoded-data:/shares/TV-Encoded
      - tv-capture-data:/shares/TV-Capture
    restart: unless-stopped
  # ==================== ↑↑↑↑↑ ここまでユーザー設定 ↑↑↑↑↑ ====================

  # ==================== ↓↓↓↓↓ ここからユーザー設定 ↓↓↓↓↓ ====================
  # Nginx コンテナを追加する設定
  # VLC などのクライアントから動画ファイルを直接再生したい場合に利用します。
  # 不要なら削除してください。
  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - tv-record-data:/srv/www/TV-Record:ro
      - tv-encoded-data:/srv/www/TV-Encoded:ro
      - tv-capture-data:/srv/www/TV-Capture:ro
      - ./nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
    restart: unless-stopped
  # ==================== ↑↑↑↑↑ ここまでユーザー設定 ↑↑↑↑↑ ====================

volumes:
  mirakurun-data:
    name: mirakurun-data
  edcb-epg-data:
    name: edcb-epg-data
  konomitv-data:
    name: konomitv-data
  amatsukaze-data:
    name: amatsukaze-data
  amatsukaze-config:
    name: amatsukaze-config
  # ==================== ↓↓↓↓↓ ここからユーザー設定 ↓↓↓↓↓ ====================
  tv-record-data:
    name: tv-record-data
    driver: local
    driver_opts:
      type: none
      device: ./Record/TV-Record
      o: bind
  tv-encoded-data:
    name: tv-encoded-data
    driver: local
    driver_opts:
      type: none
      device: ./Record/TV-Encoded
      o: bind
  tv-capture-data:
    name: tv-capture-data
    driver: local
    driver_opts:
      type: none
      device: ./Record/TV-Capture
      o: bind
  # ==================== ↑↑↑↑↑ ここまでユーザー設定 ↑↑↑↑↑ ====================
